{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet PortfolioInputFormComponent = class PortfolioInputFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.isLoading = false;\n    this.portfolioSubmit = new EventEmitter();\n    this.portfolioForm = this.fb.group({\n      items: this.fb.array([])\n    });\n  }\n  ngOnInit() {\n    // Add some default items for demonstration\n    this.addDefaultItems();\n  }\n  get items() {\n    return this.portfolioForm.get('items');\n  }\n  createItem() {\n    return this.fb.group({\n      id: [Date.now().toString() + Math.random().toString(36).substring(2)],\n      // Unique ID\n      name: ['', Validators.required],\n      symbol: ['', Validators.required],\n      allocation: [0, [Validators.required, Validators.min(0), Validators.max(100)]]\n    });\n  }\n  addDefaultItems() {\n    const defaultPortfolio = [{\n      id: Date.now().toString(),\n      name: 'Apple Inc.',\n      symbol: 'AAPL',\n      allocation: 30\n    }, {\n      id: (Date.now() + 1).toString(),\n      name: 'Vanguard S&P 500 ETF',\n      symbol: 'VOO',\n      allocation: 40\n    }, {\n      id: (Date.now() + 2).toString(),\n      name: 'iShares MSCI EAFE ETF',\n      symbol: 'EFA',\n      allocation: 20\n    }, {\n      id: (Date.now() + 3).toString(),\n      name: 'Bitcoin Trust',\n      symbol: 'GBTC',\n      allocation: 10\n    }];\n    defaultPortfolio.forEach(item => {\n      this.items.push(this.fb.group({\n        id: [item.id],\n        name: [item.name, Validators.required],\n        symbol: [item.symbol, Validators.required],\n        allocation: [item.allocation, [Validators.required, Validators.min(0), Validators.max(100)]]\n      }));\n    });\n  }\n  addItem() {\n    this.items.push(this.createItem());\n  }\n  removeItem(index) {\n    this.items.removeAt(index);\n  }\n  onSubmit() {\n    if (this.portfolioForm.valid) {\n      this.portfolioSubmit.emit(this.portfolioForm.value.items);\n    } else {\n      // Mark fields as touched to show validation errors\n      this.portfolioForm.markAllAsTouched();\n      console.error(\"Form is invalid\", this.portfolioForm.value);\n    }\n  }\n  get totalAllocation() {\n    return this.items.controls.reduce((sum, control) => {\n      const allocation = control.get('allocation')?.value || 0;\n      return sum + parseFloat(allocation);\n    }, 0);\n  }\n};\n__decorate([Input()], PortfolioInputFormComponent.prototype, \"isLoading\", void 0);\n__decorate([Output()], PortfolioInputFormComponent.prototype, \"portfolioSubmit\", void 0);\nPortfolioInputFormComponent = __decorate([Component({\n  selector: 'app-portfolio-input-form',\n  templateUrl: './portfolio-input-form.component.html',\n  styleUrls: ['./portfolio-input-form.component.css']\n})], PortfolioInputFormComponent);\nexport { PortfolioInputFormComponent };","map":{"version":3,"names":["Component","EventEmitter","Input","Output","Validators","PortfolioInputFormComponent","constructor","fb","isLoading","portfolioSubmit","portfolioForm","group","items","array","ngOnInit","addDefaultItems","get","createItem","id","Date","now","toString","Math","random","substring","name","required","symbol","allocation","min","max","defaultPortfolio","forEach","item","push","addItem","removeItem","index","removeAt","onSubmit","valid","emit","value","markAllAsTouched","console","error","totalAllocation","controls","reduce","sum","control","parseFloat","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/dinesh/tech/angular/ai-portfolio-analyzer/app/components/portfolio-input-form/portfolio-input-form.component.ts"],"sourcesContent":["\nimport { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { PortfolioItem } from '../../../types';\n\n@Component({\n  selector: 'app-portfolio-input-form',\n  templateUrl: './portfolio-input-form.component.html',\n  styleUrls: ['./portfolio-input-form.component.css']\n})\nexport class PortfolioInputFormComponent implements OnInit {\n  @Input() isLoading: boolean = false;\n  @Output() portfolioSubmit = new EventEmitter<PortfolioItem[]>();\n\n  portfolioForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.portfolioForm = this.fb.group({\n      items: this.fb.array([])\n    });\n  }\n\n  ngOnInit(): void {\n    // Add some default items for demonstration\n    this.addDefaultItems();\n  }\n\n  get items(): FormArray {\n    return this.portfolioForm.get('items') as FormArray;\n  }\n\n  createItem(): FormGroup {\n    return this.fb.group({\n      id: [Date.now().toString() + Math.random().toString(36).substring(2)], // Unique ID\n      name: ['', Validators.required],\n      symbol: ['', Validators.required],\n      allocation: [0, [Validators.required, Validators.min(0), Validators.max(100)]]\n    });\n  }\n\n  addDefaultItems() {\n    const defaultPortfolio: PortfolioItem[] = [\n      { id: Date.now().toString(), name: 'Apple Inc.', symbol: 'AAPL', allocation: 30 },\n      { id: (Date.now() + 1).toString(), name: 'Vanguard S&P 500 ETF', symbol: 'VOO', allocation: 40 },\n      { id: (Date.now() + 2).toString(), name: 'iShares MSCI EAFE ETF', symbol: 'EFA', allocation: 20 },\n      { id: (Date.now() + 3).toString(), name: 'Bitcoin Trust', symbol: 'GBTC', allocation: 10 },\n    ];\n    defaultPortfolio.forEach(item => {\n      this.items.push(this.fb.group({\n        id: [item.id],\n        name: [item.name, Validators.required],\n        symbol: [item.symbol, Validators.required],\n        allocation: [item.allocation, [Validators.required, Validators.min(0), Validators.max(100)]]\n      }));\n    });\n  }\n\n  addItem(): void {\n    this.items.push(this.createItem());\n  }\n\n  removeItem(index: number): void {\n    this.items.removeAt(index);\n  }\n\n  onSubmit(): void {\n    if (this.portfolioForm.valid) {\n      this.portfolioSubmit.emit(this.portfolioForm.value.items as PortfolioItem[]);\n    } else {\n      // Mark fields as touched to show validation errors\n      this.portfolioForm.markAllAsTouched();\n      console.error(\"Form is invalid\", this.portfolioForm.value);\n    }\n  }\n\n  get totalAllocation(): number {\n    return this.items.controls.reduce((sum, control) => {\n      const allocation = control.get('allocation')?.value || 0;\n      return sum + parseFloat(allocation);\n    }, 0);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}